plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
    id 'checkstyle'
    id 'com.github.spotbugs' version '4.5.0'
    id 'idea'
}

group = 'de.siegmar'
version = '3.0.0'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
    withJavadocJar()
    withSourcesJar()
}

repositories {
    mavenCentral()
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.4.2'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.13.4'
    implementation 'org.slf4j:slf4j-api:1.7.36'

    testCompileOnly 'org.projectlombok:lombok:1.18.24'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'
    testImplementation platform('org.junit:junit-bom:5.7.2')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'ch.qos.logback:logback-classic:1.2.10'
}

sourceSets {
    integrationTest {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
}

processResources {
    expand(project.properties)
}

configurations {
    integrationTestImplementation.extendsFrom testImplementation
    integrationTestRuntimeOnly.extendsFrom testRuntimeOnly
}

task integrationTest(type: Test) {
    description = 'Runs integration tests.'
    group = 'verification'

    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    failFast = true
}

// Required in order to run the integration tests from IntelliJ (bug?)
task integrationTestJar() {}

tasks.withType(Test) {
    useJUnitPlatform()
}

idea {
    module {
        testSourceDirs += sourceSets.integrationTest.java.srcDirs
        testResourceDirs += sourceSets.integrationTest.resources.srcDirs
    }
}

spotbugs {
    excludeFilter = file("config/spotbugs/exclude.xml")
}

tasks.matching {task -> task.name.startsWith('spotbugs')}.forEach {
    it.reports {
        html.enabled = true
        xml.enabled = false
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = "billomat4j"
            from components.java

            pom {
                name = 'Billomat4J'
                description = 'Java Software Development Kit for the Billomat API.'
                url = 'https://github.com/osiegmar/billomat4j'
                licenses {
                    license {
                        name = 'GNU Lesser General Public License version 3.0'
                        url = 'https://www.gnu.org/licenses/lgpl-3.0.txt'
                    }
                }

                scm {
                    connection = 'scm:git:https://github.com/osiegmar/billomat4j.git'
                    url = 'https://github.com/osiegmar/billomat4j'
                }

                developers {
                    developer {
                        id = 'osiegmar'
                        name = 'Oliver Siegmar'
                        email = 'oliver@siegmar.de'
                    }
                }
            }
        }
    }
    repositories {
        maven {
            name = 'ossrh'
            credentials(PasswordCredentials)
            def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            url version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}
